This example shows how most widget parameters can be dynamically changed.

Each widget is associated with an Oz object. In most cases you don't have to bother about these objects. They allow you to control everything that is controllable over the widgets. You can get a reference to this object by the handle parameter. An alternative way is to specify an atom for the feature parameter : the object is then stored in the specified feature name of the parent (container) object :

- The QTk.build procedure creates the described window and returns an object giving access to the toplevel window (here : Window).

- The show method of this object makes the window visible. As shown here, the feature parameter specified in the label widget allows to reference the label object by that feature name of the parent object (here : Window.label). This object is also directly referenced by the variable specified by the handle parameter (here : L).

Most of the widget parameters given at the description time (depending on the parameter and the widget) can be changed later by a call to the set method of the controlling object.
Moreover, you can obtain the current value of these parameters(once again depending on the parameter and the widget) by a call to the get method.
