<html>
<head><title>QHTML application</title></head>
<script>

var menuOpen=new Array();
var menuBtnBottomColor;
var menuBtnRightColor;
var menuBtnTopColor;
var menuBtnLeftColor;
var menuBgColor;
var menuFgColor;

function setmenucolor(a,b,c,d,e,f) {
  menuBtnBottomColor=a;
  menuBtnRightColor=b;
  menuBtnTopColor=c;
  menuBtnLeftColor=d;
  menuBgColor=e;
  menuFgColor=f;
}

function getOffsetTop(o) {
  if (o==null) {return 0} else
  {return o.offsetTop+getOffsetTop(o.offsetParent)}
}

function getOffsetLeft(o) {
  if (o==null) {return 0} else
  {return o.offsetLeft+getOffsetLeft(o.offsetParent)}
}

function menuhighlight(lid,c) {
  if (lid.component=="menulabel") {
    if (c==1) {
      lid.style.borderBottomColor=menuBtnBottomColor;
      lid.style.borderRightColor=menuBtnRightColor;
      lid.style.borderTopColor=menuBtnTopColor;
      lid.style.borderLeftColor=menuBtnLeftColor;
    } else {
      if (c==0) {
        var c=lid.style.backgroundColor;
        if (c=='') {c='white'}
        lid.style.borderColor=c;
      } else {
        lid.style.borderBottomColor=menuBtnTopColor;
        lid.style.borderRightColor=menuBtnLeftColor;
        lid.style.borderTopColor=menuBtnBottomColor;
        lid.style.borderLeftColor=menuBtnRightColor;
      }
    }
  }
}

function showmenu(lid,mid) {
    switch(lid.position) {
    case "belowright":
      mid.style.top=lid.offsetHeight+getOffsetTop(lid);
      mid.style.left=getOffsetLeft(lid);
      mid.style.display="block";
      break;
    case "belowleft":
      mid.style.top=lid.offsetHeight+getOffsetTop(lid);
      mid.style.display="block";
      mid.style.left=getOffsetLeft(lid)+lid.offsetWidth-mid.offsetWidth;
      break;
    case "aboveright":
      mid.style.left=getOffsetLeft(lid);
      mid.style.display="block";
      mid.style.top=getOffsetTop(lid)-mid.offsetHeight;
      break;
    case "aboveleft":
      mid.style.display="block";
      mid.style.top=getOffsetTop(lid)-mid.offsetHeight;
      mid.style.left=getOffsetLeft(lid)+lid.offsetWidth-mid.offsetWidth;
      break;
    case "right":
      mid.style.top=lid.offsetTop;
      mid.style.left=lid.offsetLeft+lid.offsetWidth;
      mid.style.display="block";
    }
}

function hidemenu(lid,mid) {
    mid.style.display="none";
}

function removemenu(nu) {
  for(var i=0; i<nu; i++) {
    var m=menuOpen.pop();
    hidemenu(m.label,m.menu);
  }
}

function menubtnenter(evt) {
  var cid=evt.srcElement;
  if (cid.component=="menulabel") {
    if (menuOpen.length==0) {
      menuhighlight(cid,1);
    } else {
      if (menuOpen[0].label==cid) {
        removemenu(menuOpen.length-1);
      } else {
        var m=new Object();
        m.label=cid; m.menu=cid.children(0);
        menuOpen[0].menu.releaseCapture();
        menuhighlight(menuOpen[0].label,0);
        removemenu(menuOpen.length);
        menuOpen.push(m);
        showmenu(m.label,m.menu);
        m.menu.setCapture(false);
        menuhighlight(m.label,2);
      }
    }
  }
}


function menubtnexit(evt) {
  var cid=evt.srcElement;
  if (cid.component=="menulabel") {
    if (menuOpen.length==0) {
      menuhighlight(cid,0);
    }
  }
}

function menubtnclick(evt) {
  var cid=evt.srcElement;
  if (cid.component=="menulabel") {
    if (menuOpen.length==0) {
      // open the menu
      menuhighlight(cid,2);
      var m=new Object();
      m.label=cid; m.menu=cid.children(0);
      menuOpen.push(m);
      showmenu(m.label,m.menu);
      m.menu.setCapture(false);
    } else {
      // close menu
      menuOpen[0].menu.releaseCapture();
      menuhighlight(cid,1);
      removemenu(menuOpen.length);
    }
  } else {
    if (menuOpen!=null) {
      // close menu
      menuhighlight(menuOpen[0].label,0);
      menuOpen[0].menu.releaseCapture();
      removemenu(menuOpen.length);
    }
  }
}

function rowenter(evt,ref,deep) {
  ref.bgColor=menuFgColor;
  for(var i=0; i<ref.cells.length; i++) {
    ref.cells(i).children(0).style.color=menuBgColor;
  }
  if (ref.component=="submenulabel") {
//    alert(deep);
    var m=new Object();
    m.label=ref; m.menu=ref.cells(4).children(0);
    if (menuOpen.length>deep) {
      if (menuOpen[deep].label!=ref) {
        // hide all menus up to this menu
        removemenu(menuOpen.length-deep);
        menuOpen.push(m);
        showmenu(m.label,m.menu);
      }
    } else {
      // hide all menus up to this menu
      removemenu(menuOpen.length-deep);
      menuOpen.push(m);
      showmenu(m.label,m.menu);
    }
  } else {
    removemenu(menuOpen.length-deep);
  }
}

function rowexit(ref) {
  ref.bgColor=menuBgColor;
  for(var i=0; i<ref.cells.length; i++) {
    ref.cells(i).children(0).style.color=menuFgColor;
  }
}

function rowclick(ref) {
  rowexit(ref);
  if (ref.component!="submenulabel") {
    sendToOZ("event",ref.id+",onselectmenu,''");
  }
}

function putHTML(pageCode){
  main.document.write(pageCode)
  main.document.close()
}

function enc(val) {
  var code="";
  try {if (val==undefined) {code="1"};} catch(e) {} finally{};
  if (code=="") {
    if (val==null) {code="2"} else {code="0"+val}
  };
  return code;
}

function sendToOZ(type,msg) {
      var str=type+","+msg;
      document.frames(1).GJoz.sendToOz(str.length+","+str);
}

function recvFromOz(msg) {
      if (msg=="null") {
        document.write("Connection lost...");
      } else {
        window.execScript(msg);
      }
}

function catchevent(evt, id, name, params) {
        var str=id+","+name;
        if (params!='') {
                var a=params.split(",");
                for (var i=0;i<a.length;i++) {
                        str=str+","+a[i]+":"+enc(eval("event."+a[i]));
                }}
        sendToOZ("event",str)
}

function display(str) {
        main.document.write("<html><table style='width:100%; height:100%'><tr><td align=middle>" + str + "</td></tr></table></html>")
        main.document.close()
}

function addOption(id,txt,pos) {
  var elem=document.createElement("OPTION");
  elem.text=txt;
  if (pos=="end") {id.options.add(elem)} else {id.options.add(elem,pos)};
}

function delOption(id,pos) {
  id.options.remove(pos)
}

function setSelection(id,sel) {
  for (var i=0; i<sel.length; i++) {
    id.options(i).selected=(sel.charAt(i)=="1")
  }
  for (var i=sel.length; i<id.options.length; i++) {
    id.options(i).selected=false
  }
}

function getSelection(id) {
  var str="";
  for (var i=0; i<id.options.length; i++) {
    if (id.options(i).selected) {str=str+"1"} else {str=str+"0"};
  }
  return str
}

function getSelectedIndex(id) {
  return id.options.selectedIndex
}



function init() {
  display("Loading applet and connecting")
  hidden.document.write('<html>')
  hidden.document.write('<script>function recvFromOz(msg) {parent.recvFromOz(msg)}<\/script>')
  hidden.document.write('<APPLET code=GJoz.class height=1 name=GJoz style="HEIGHT: 1px; VISIBILITY: hidden; WIDTH: 120px" width=120 MAYSCRIPT VIEWASTEXT id="gJozApplet"><PARAM NAME="port" VALUE="55555"></APPLET>')
  hidden.document.write('<\/html>')
  hidden.document.close()
}

function setTA(id,value) {
  // replace all &#13; by \n\r
  var re = new RegExp("&#13;","g");
  value=value.replace(re,"\n\r");
  // replace all && (double &) by & (simple &)
  re = new RegExp("&&","g");
  value=value.replace(re,"&")
  // set text
  id.innerText=value
}

</script>

<frameset rows="100%,0" onload="init()" cols="100%" border=0>
<frame name="main">
<frame name="hidden">
</frameset>

</html>
